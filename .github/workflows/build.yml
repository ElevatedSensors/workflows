name: Build

on:
  workflow_call:
    inputs:
      files:
        description: Comma-separated list of files to build.
        required: true
        type: string
      root_dir:
        description: Root directory to build.
        required: false
        default: './'
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files-array.outputs.files }}
    steps:
      - uses: actions/setup-python@v2
      - id: files-array
        run: |
          files=$(echo "${{ inputs.files }}" | jq -Rcn 'inputs | . / ","')
          echo ::set-output name=files::$files
  build:
    name: Build ESPHome binary for ${{ matrix.file }}
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.prepare.outputs.files) }}
    outputs:
      esphome-version: ${{ steps.esphome-build.outputs.esphome-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: esphome/build-action@main
        id: esphome-build
        with:
          yaml_file: ${{ inputs.root_dir }}/${{ matrix.file }}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ steps.esphome-build.outputs.name }}
          path: ${{ steps.esphome-build.outputs.name }}
  deploy:
    name: Deploy new firmware to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          path: output

      - name: Create single manifest.json
        run: |
          jq -s '{"name": "ESPHome", "version": "${{ needs.build.outputs.esphome-version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/*/manifest.json > output/manifest.json

      - run: cp -R ${{ inputs.root_dir }}/static/* output

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: gh-pages
          folder: output
